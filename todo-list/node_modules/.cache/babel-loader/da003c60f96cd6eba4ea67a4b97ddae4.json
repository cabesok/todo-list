{"ast":null,"code":"import _toConsumableArray from\"/Users/emiliano/Desktop/APLICACIONES/To Do List/todo-list/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{TextField,Button,Grid}from\"@mui/material\";import{useContext}from'react';import{ListContext}from'../context/ListContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Form=function Form(){var _useContext=useContext(ListContext),list=_useContext.list,setList=_useContext.setList;var _useContext2=useContext(ListContext),newTask=_useContext2.newTask,setNewTask=_useContext2.setNewTask;var _useContext3=useContext(ListContext),updateData=_useContext3.updateData,setupdateData=_useContext3.setupdateData;var addTask=function addTask(){if(newTask){var num=list.length+1;var newEntry={id:num,title:newTask,status:false};setList([].concat(_toConsumableArray(list),[newEntry]));setNewTask('');}};return/*#__PURE__*/_jsxs(Grid,{container:true,justifyContent:\"space-around\",children:[/*#__PURE__*/_jsx(TextField,{autoFocus:true,variant:\"outlined\",label:\"Enter task...\",value:newTask,onChange:function onChange(e){return setNewTask(e.target.value);}}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:addTask,children:\"Add\"})]});};export default Form;","map":{"version":3,"names":["TextField","Button","Grid","useContext","ListContext","Form","list","setList","newTask","setNewTask","updateData","setupdateData","addTask","num","length","newEntry","id","title","status","e","target","value"],"sources":["/Users/emiliano/Desktop/APLICACIONES/To Do List/todo-list/src/components/Form.jsx"],"sourcesContent":["\n\nimport {TextField, Button, Grid} from \"@mui/material\"\n\nimport { useContext } from 'react';\nimport { ListContext } from '../context/ListContext';\n\nconst Form = () => {\n\n    const {list, setList} = useContext(ListContext)\n    const {newTask, setNewTask} = useContext(ListContext)\n    const {updateData, setupdateData} = useContext(ListContext)\n\n    const addTask = () => {\n        if(newTask){\n            let num = list.length + 1;\n            let newEntry = {id: num, title: newTask, status: false}\n            setList([...list, newEntry])\n            setNewTask('')\n        }\n    }\n\n    \n    \n    return(\n\n        <Grid \n            container\n            justifyContent= 'space-around'\n            >\n            \n            <TextField \n                autoFocus={true}\n                variant=\"outlined\" \n                label=\"Enter task...\"\n                value={newTask}\n                onChange= { (e) => setNewTask(e.target.value)}\n                 ></TextField>\n            <Button variant=\"contained\" onClick={addTask} >Add</Button>\n            \n        </Grid>\n    )\n}\n\nexport default Form;"],"mappings":"uJAEA,OAAQA,SAAR,CAAmBC,MAAnB,CAA2BC,IAA3B,KAAsC,eAAtC,CAEA,OAASC,UAAT,KAA2B,OAA3B,CACA,OAASC,WAAT,KAA4B,wBAA5B,C,wFAEA,GAAMC,KAAI,CAAG,QAAPA,KAAO,EAAM,CAEf,gBAAwBF,UAAU,CAACC,WAAD,CAAlC,CAAOE,IAAP,aAAOA,IAAP,CAAaC,OAAb,aAAaA,OAAb,CACA,iBAA8BJ,UAAU,CAACC,WAAD,CAAxC,CAAOI,OAAP,cAAOA,OAAP,CAAgBC,UAAhB,cAAgBA,UAAhB,CACA,iBAAoCN,UAAU,CAACC,WAAD,CAA9C,CAAOM,UAAP,cAAOA,UAAP,CAAmBC,aAAnB,cAAmBA,aAAnB,CAEA,GAAMC,QAAO,CAAG,QAAVA,QAAU,EAAM,CAClB,GAAGJ,OAAH,CAAW,CACP,GAAIK,IAAG,CAAGP,IAAI,CAACQ,MAAL,CAAc,CAAxB,CACA,GAAIC,SAAQ,CAAG,CAACC,EAAE,CAAEH,GAAL,CAAUI,KAAK,CAAET,OAAjB,CAA0BU,MAAM,CAAE,KAAlC,CAAf,CACAX,OAAO,8BAAKD,IAAL,GAAWS,QAAX,GAAP,CACAN,UAAU,CAAC,EAAD,CAAV,CACH,CACJ,CAPD,CAWA,mBAEI,MAAC,IAAD,EACI,SAAS,KADb,CAEI,cAAc,CAAE,cAFpB,wBAKI,KAAC,SAAD,EACI,SAAS,CAAE,IADf,CAEI,OAAO,CAAC,UAFZ,CAGI,KAAK,CAAC,eAHV,CAII,KAAK,CAAED,OAJX,CAKI,QAAQ,CAAI,kBAACW,CAAD,QAAOV,WAAU,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB,EALhB,EALJ,cAYI,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,OAAO,CAAET,OAArC,iBAZJ,GAFJ,CAkBH,CAnCD,CAqCA,cAAeP,KAAf"},"metadata":{},"sourceType":"module"}