[{"/Users/emiliano/Desktop/APLICACIONES/To Do List/todo-list/src/index.js":"1","/Users/emiliano/Desktop/APLICACIONES/To Do List/todo-list/src/App.js":"2","/Users/emiliano/Desktop/APLICACIONES/To Do List/todo-list/src/reportWebVitals.js":"3","/Users/emiliano/Desktop/APLICACIONES/To Do List/todo-list/src/components/Form.jsx":"4","/Users/emiliano/Desktop/APLICACIONES/To Do List/todo-list/src/components/TaskList.jsx":"5","/Users/emiliano/Desktop/APLICACIONES/To Do List/todo-list/src/context/ListContext.js":"6"},{"size":535,"mtime":1657578043178,"results":"7","hashOfConfig":"8"},{"size":596,"mtime":1658962050879,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1657578043179,"results":"10","hashOfConfig":"8"},{"size":1103,"mtime":1658961578034,"results":"11","hashOfConfig":"8"},{"size":1920,"mtime":1658966071809,"results":"12","hashOfConfig":"8"},{"size":570,"mtime":1663102018925,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1py1myq",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/emiliano/Desktop/APLICACIONES/To Do List/todo-list/src/index.js",[],[],[],"/Users/emiliano/Desktop/APLICACIONES/To Do List/todo-list/src/App.js",["36","37"],[],"\nimport React from \"react\";\nimport Form from './components/Form';\nimport TaskList from './components/TaskList';\nimport {Grid} from \"@mui/material\";\nimport {useState} from 'react';\nimport { ListProvider } from './context/ListContext';\n\nfunction App() {\n  \n  const [search, setSearch] = useState([])\n  \n  return (\n  <ListProvider>\n      <Grid \n      container\n      direction= 'column'\n      alignItems= 'center'\n      maxWidth= 'sm' \n      sx={{margin: 'auto'}}>\n\n        <h1>To Do List</h1>\n\n        <Form />\n        <TaskList />\n\n      </Grid>\n  </ListProvider>\n    \n  );\n}\n\nexport default App;\n","/Users/emiliano/Desktop/APLICACIONES/To Do List/todo-list/src/reportWebVitals.js",[],[],"/Users/emiliano/Desktop/APLICACIONES/To Do List/todo-list/src/components/Form.jsx",["38","39"],[],"\n\nimport {TextField, Button, Grid} from \"@mui/material\"\n\nimport { useContext } from 'react';\nimport { ListContext } from '../context/ListContext';\n\nconst Form = () => {\n\n    const {list, setList} = useContext(ListContext)\n    const {newTask, setNewTask} = useContext(ListContext)\n    const {updateData, setupdateData} = useContext(ListContext)\n\n    const addTask = () => {\n        if(newTask){\n            let num = list.length + 1;\n            let newEntry = {id: num, title: newTask, status: false}\n            setList([...list, newEntry])\n            setNewTask('')\n        }\n    }\n\n    \n    \n    return(\n\n        <Grid \n            container\n            justifyContent= 'space-around'\n            >\n            \n            <TextField \n                autoFocus={true}\n                variant=\"outlined\" \n                label=\"Enter task...\"\n                value={newTask}\n                onChange= { (e) => setNewTask(e.target.value)}\n                 ></TextField>\n            <Button variant=\"contained\" onClick={addTask} >Add</Button>\n            \n        </Grid>\n    )\n}\n\nexport default Form;","/Users/emiliano/Desktop/APLICACIONES/To Do List/todo-list/src/components/TaskList.jsx",["40","41","42","43"],[],"import {List, ListItem, ListItemText, ListItemIcon} from \"@mui/material\"\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\n\nimport { useContext } from 'react';\nimport { ListContext } from '../context/ListContext';\n\nconst TaskList = () => {\n\n    const {list, setList} = useContext(ListContext)\n    const {newTask, setNewTask} = useContext(ListContext)\n    const {updateData, setupdateData} = useContext(ListContext)\n\n    const deleteTask = (id) => {\n        let newTasks = list.filter(task => {\n            return task.id !== id\n        })\n        setList(newTasks)\n    }\n\n    const markDone = (id) => {\n            let newTask = list.map(task => {\n                if(task.id === id ){\n                    return ({...task, status: !task.status})\n                }\n                return task\n            })\n            setList(newTask)\n    }\n    \n    return(\n        <List sx={{width: '80%', margin: '15px',}}>\n            {\n                list.map((task, i) => {\n                    return(\n                <ListItem divider key={task.id}>\n                    <ListItemText primary={task.title} sx={task.status ? {textDecoration: 'line-through', opacity: 0.3}  : ''}  />\n                        \n                        <ListItemIcon onClick={() => markDone(task.id)} >\n                            <CheckCircleOutlineIcon fontSize=\"large\" color='success'/>\n                        </ListItemIcon>\n                        \n                        <ListItemIcon onClick={() => deleteTask(task.id)} >\n                            <DeleteForeverIcon fontSize=\"large\" color='error'/>\n                        </ListItemIcon>\n\n                    \n\n                        \n                </ListItem>\n                    )\n                })\n            }\n            \n            \n        </List>\n    )\n}\n\nexport default TaskList;","/Users/emiliano/Desktop/APLICACIONES/To Do List/todo-list/src/context/ListContext.js",[],[],{"ruleId":"44","severity":1,"message":"45","line":11,"column":10,"nodeType":"46","messageId":"47","endLine":11,"endColumn":16},{"ruleId":"44","severity":1,"message":"48","line":11,"column":18,"nodeType":"46","messageId":"47","endLine":11,"endColumn":27},{"ruleId":"44","severity":1,"message":"49","line":12,"column":12,"nodeType":"46","messageId":"47","endLine":12,"endColumn":22},{"ruleId":"44","severity":1,"message":"50","line":12,"column":24,"nodeType":"46","messageId":"47","endLine":12,"endColumn":37},{"ruleId":"44","severity":1,"message":"51","line":11,"column":12,"nodeType":"46","messageId":"47","endLine":11,"endColumn":19},{"ruleId":"44","severity":1,"message":"52","line":11,"column":21,"nodeType":"46","messageId":"47","endLine":11,"endColumn":31},{"ruleId":"44","severity":1,"message":"49","line":12,"column":12,"nodeType":"46","messageId":"47","endLine":12,"endColumn":22},{"ruleId":"44","severity":1,"message":"50","line":12,"column":24,"nodeType":"46","messageId":"47","endLine":12,"endColumn":37},"no-unused-vars","'search' is assigned a value but never used.","Identifier","unusedVar","'setSearch' is assigned a value but never used.","'updateData' is assigned a value but never used.","'setupdateData' is assigned a value but never used.","'newTask' is assigned a value but never used.","'setNewTask' is assigned a value but never used."]